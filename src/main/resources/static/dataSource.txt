
#사용자 테이블 만들기
CREATE TABLE 사용자 (
    사용자_id INT(10) NOT NULL AUTO_INCREMENT=1000 PRIMARY KEY,
    사용자명 VARCHAR(5) NOT NULL,
    생년월일 INT(8) NOT NULL,
    성별 CHAR(1) NOT NULL CHECK(성별 IN ('M', 'F')),
    이메일 VARCHAR(40) NOT NULL
    );

#사용자 테이블 데이터 삽입
INSERT INTO 사용자 (사용자명, 생년월일, 성별, 이메일)
VALUES
    ('고지혜', 20000429, 'F', 'jihyevivianako@google.com'),
    ('김희수', 20011215, 'F', 'kimheesoo@google.com'),
    ('이철철', 19870322, 'M', 'leechulchul@google.com'),
    ('박미미', 19921005, 'F', 'parkmime@naver.com'),
    ('정성성', 20000830, 'M', 'jungsungsung@google.com'),
    ('최지지', 19930418, 'F', 'choijiji@google.com'),
    ('이민민', 19980912, 'M', 'leeminmin@naver.com'),
    ('김지지', 19900125, 'F', 'kimjijiji@google.com'),
    ('송송송', 19961008, 'M', 'song333@naver.com'),
    ('장후후', 19951107, 'M', 'jangwhowho@google.com');

#회사 테이블 생성
create table 회사(
    회사_id INT(10) AUTO_INCREMENT PRIMARY KEY,
    회사명 VARCHAR(20) NOT NULL UNIQUE,
    국가 VARCHAR(20) NOT NULL,
    지역 VARCHAR(20) NOT NULL
    );
    
#회사 테이블 데이터 삽입
INSERT INTO 회사 (회사명, 국가, 지역)
VALUES
    ('원티드랩', '한국', '서울'),
    ('네이버', '한국', '경기'),
    ('카카오', '한국', '경기'),
    ('쿠팡', '한국', '서울'),
    ('우아한 형제들', '한국', '서울'),
    ('야놀자', '한국', '서울'),
    ('케이티', '한국', '경기'),
    ('BNK시스템', '한국', '부산'),
    ('엔씨소프트', '한국', '경기'),
    ('구글', '미국', '캘리포니아'),
    ('인텔', '미국', '캘리포니아');

#채용 테이블 생성
CREATE TABLE 채용공고 (
    채용공고_id INT(10) AUTO_INCREMENT=10000001 PRIMARY KEY,
    회사_id INT(10) NOT NULL,
    FOREIGN KEY (회사_id) REFERENCES 회사(회사_id),
    채용포지션 VARCHAR(20) NOT NULL,
    채용보상금 INT(10) NOT NULL,
    채용내용 TEXT NOT NULL,
    사용기술 VARCHAR(100) NOT NULL
);

#채용 테이블 데이터 삽입
INSERT INTO 채용공고 (회사_id, 채용포지션, 채용보상금, 채용내용, 사용기술)
VALUES
    (1, '백엔드 주니어 개발자', 1000000, '원티드랩에서 주니어 개발자를 채용합니다. 자격요건은 아래와 같습니다. 1. Java&Spring, Python&Django, Javascript&Node.js중 한 가지를 사용하여 서비스 개요 및 요구사항을 만족하는 API서버를 구현할 수 있을 것', 'JAVA, Python, Javascript');
    (2, '프론트엔드 시니어 개발자', 1000000, '네이버에서 프론트엔드 개발자를 채용합니다. ', 'React, Javascript'),
    (2, '백엔드 시니어 개발자', 1000000, '네이버에서 백엔드 개발자를 채용합니다. 자격요건은 아래와 같습니다.', 'Java, AWS, Spring'),
    (3, '데이터 엔지니어', 500000, '카카오에서 데이터 엔지니어를 채용합니다.', 'SQL, Big Data'),
    (4, '데이터 분석가', 500000, '쿠팡에서 데이터 분석가를 채용합니다...', 'Python, R, 데이터 분석'),
    (5, '백엔드 엔지니어', 1000000, '우아한 형제들에서 백엔드 엔지니어를 채용합니다...', 'Java, Spring, RESTful API'),
    (6, '데이터 사이언티스트', 1500000, '야놀자에서 데이터 사이언티스트를 채용합니다...', 'Python, Machine Learning'),
    (6, '프론트엔드 인턴 개발자', 1500000, '야놀자에서 프론트엔드 인턴을 채용합니다. 3개월간 인턴 기간 후 채용여부를 결정합니다.', 'React, Javascript'),
    (6, '데이터 사이언티스트', 1500000, '야놀자에서 백엔드 인턴을 채용합니다. 3개월간 인턴 기간 후 채용여부를 결정합니다.', 'Javascript, node.js'),
    (7, '프론트엔드 개발자', 0, '케이티에서 프론트엔드 개발자를 채용합니다...', 'React, HTML, CSS'),
    (8, '소프트웨어 엔지니어', 0, 'BNK시스템에서 소프트웨어 엔지니어를 채용합니다...', 'C++, Java, 소프트웨어 개발'),
    (9, '백엔드 엔지니어', 500000, '엔씨소프트에서 백엔드 엔지니어를 채용합니다. 엔', 'Java, Spring, 데이터베이스'),
    (10, '소프트웨어 엔지니어', 2000000, '구글에서 소프트웨어 엔지니어를 채용합니다...', 'Python, 소프트웨어 개발'),
    (10, '소프트웨어 엔지니어(인턴)', 1000000, '구글에서 소프트웨어 엔지니어(인턴)를 채용합니다...', 'Python, 소프트웨어 개발');

#지원내역 테이블 생성
CREATE TABLE 지원내역 (
    사용자_id INT,
    FOREIGN KEY (사용자_id) REFERENCES 사용자(사용자_id),
    채용공고_id INT,
    FOREIGN KEY (채용공고_id) REFERENCES 채용공고(채용공고_id),
    PRIMARY KEY (사용자_id, 채용공고_id)
);

#지원내역 테이블 데이터 삽입
INSERT INTO 지원내역 (사용자_id, 채용공고_id)
VALUES
    (1001, 10000001),
    (1001, 10000002),
    (1002, 10000001),
    (1003, 10000002),
    (1003, 10000004),
    (1003, 10000005),
    (1004, 10000003),
    (1005, 10000004),
    (1006, 10000001),
    (1006, 10000005),
    (1007, 10000010),
    (1008, 10000007),
    (1008, 10000008),
    (1009, 10000002),
    (1009, 10000003),
    (1009, 10000008);

